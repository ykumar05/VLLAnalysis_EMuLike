//bJet Efficiency for 2L exclusive final state

#include <vector>
#include "TMath.h"
using namespace std;

// bTag SF for the event (looped over all jets)
// For "data" efficiency, enter the stored JetDeepMediumCSVSF value
// For "mc" efficiency, enter JetDeepMediumCSVSF as 1.0 !!

// ------------------------------------------------------------------------------------------
// ------------------------------------------------------------------------------------------


// 2018
float AnaScript::bTagSF2018(int MCsample, vector<Particle>Jet){

  // bogus default values
  float probability_mc = 1.0;
  float probability_data = 1.0;
  float LJetEff[3][8] = { {  0.5,  0.5,  0.5,  0.5,  0.5,  0.5,  0.5,  0.5   }, {  0.5,  0.5,  0.5,  0.5,  0.5,  0.5,  0.5,  0.5   }, {  0.5,  0.5,  0.5,  0.5,  0.5,  0.5,  0.5,  0.5   } };
  float CJetEff[3][8] = { {  0.5,  0.5,  0.5,  0.5,  0.5,  0.5,  0.5,  0.5   }, {  0.5,  0.5,  0.5,  0.5,  0.5,  0.5,  0.5,  0.5   }, {  0.5,  0.5,  0.5,  0.5,  0.5,  0.5,  0.5,  0.5   } };
  float BJetEff[3][8] = { {  0.5,  0.5,  0.5,  0.5,  0.5,  0.5,  0.5,  0.5   }, {  0.5,  0.5,  0.5,  0.5,  0.5,  0.5,  0.5,  0.5   }, {  0.5,  0.5,  0.5,  0.5,  0.5,  0.5,  0.5,  0.5   } };
  //
  // ----------------------
  //DY(1-9)
  if( MCsample == 1 ) {//DY_M10to50
    double BJetEff_temp[3][8] = {{0.8022922873497009, 0.831632673740387, 0.9090909361839294, 0.8297872543334961, 0.8500000238418579, 1.0, 0.75, 0.0}, {0.8013937473297119, 0.8758620619773865, 0.7472527623176575, 0.7941176295280457, 0.75, 1.0, 1.0, 0.0}, {0.7318435907363892, 0.7333333492279053, 0.7799999713897705, 0.7368420958518982, 0.5714285969734192, 1.0, 1.0, 0.0}};
    double CJetEff_temp[3][8] = {{0.18576885759830475, 0.16307692229747772, 0.16944023966789246, 0.11818181723356247, 0.1388888955116272, 0.2777777910232544, 0.10000000149011612, 0.0}, {0.18304431438446045, 0.14532019197940826, 0.1492537260055542, 0.13750000298023224, 0.22727273404598236, 0.1666666716337204, 0.1428571492433548, 0.0}, {0.17938144505023956, 0.14254385232925415, 0.15444014966487885, 0.06542056053876877, 0.0625, 0.10000000149011612, 0.0, 0.0}};
    double LJetEff_temp[3][8] = {{0.18576885759830475, 0.16307692229747772, 0.16944023966789246, 0.11818181723356247, 0.1388888955116272, 0.2777777910232544, 0.10000000149011612, 0.0}, {0.18304431438446045, 0.14532019197940826, 0.1492537260055542, 0.13750000298023224, 0.22727273404598236, 0.1666666716337204, 0.1428571492433548, 0.0}, {0.17938144505023956, 0.14254385232925415, 0.15444014966487885, 0.06542056053876877, 0.0625, 0.10000000149011612, 0.0, 0.0}};
     
    for ( int i=0; i<3; i++) {
      for ( int j=0; j<8; j++) {
	LJetEff[i][j] = LJetEff_temp[i][j];
	CJetEff[i][j] = CJetEff_temp[i][j];
	BJetEff[i][j] = BJetEff_temp[i][j];
      }
    }
  }
  if ( MCsample == 2 ) { //DY_M50
    double BJetEff_temp[3][8] = {{0.8169392347335815, 0.8455308079719543, 0.8576176762580872, 0.8587867021560669, 0.8556473851203918, 0.8467103242874146, 0.8354591727256775, 0.800000011920929}, {0.78322833776474, 0.8108067512512207, 0.822787344455719, 0.8222182989120483, 0.8213852047920227, 0.812700092792511, 0.791304349899292, 0.800000011920929}, {0.7545425891876221, 0.7800526022911072, 0.784349799156189, 0.7876896858215332, 0.7805200815200806, 0.792792797088623, 0.7923076748847961, 1.0}};
    double CJetEff_temp[3][8] = {{0.18110813200473785, 0.15582416951656342, 0.14840196073055267, 0.15149511396884918, 0.15637530386447906, 0.18433833122253418, 0.21724818646907806, 0.25471699237823486}, {0.1778445988893509, 0.15699215233325958, 0.1468859314918518, 0.15396907925605774, 0.15910622477531433, 0.1673944741487503, 0.19904306530952454, 0.17777778208255768}, {0.17616260051727295, 0.14962686598300934, 0.1376606673002243, 0.14129719138145447, 0.1399955004453659, 0.16449086368083954, 0.1943662017583847, 0.0}};
    double LJetEff_temp[3][8] = {{0.18110813200473785, 0.15582416951656342, 0.14840196073055267, 0.15149511396884918, 0.15637530386447906, 0.18433833122253418, 0.21724818646907806, 0.25471699237823486}, {0.1778445988893509, 0.15699215233325958, 0.1468859314918518, 0.15396907925605774, 0.15910622477531433, 0.1673944741487503, 0.19904306530952454, 0.17777778208255768}, {0.17616260051727295, 0.14962686598300934, 0.1376606673002243, 0.14129719138145447, 0.1399955004453659, 0.16449086368083954, 0.1943662017583847, 0.0}};

    for ( int i=0; i<3 ; i++) {
      for ( int j=0; j<8; j++) {
	LJetEff[i][j] = LJetEff_temp[i][j];
	CJetEff[i][j] = CJetEff_temp[i][j];
	BJetEff[i][j] = BJetEff_temp[i][j];
      }
    }
  }
  
  //ZZ(20-29)
  if ( MCsample == 20 ) {//2Q2L 
      double BJetEff_temp[3][8] = {{0.8231387734413147, 0.8470578789710999, 0.8557965755462646, 0.8584347367286682, 0.8602673411369324, 0.8557541966438293, 0.884463906288147, 0.9094339609146118}, {0.7858526110649109, 0.8157595992088318, 0.8208411335945129, 0.8214778304100037, 0.8187536001205444, 0.8236675262451172, 0.8290653228759766, 0.8376623392105103}, {0.7581248879432678, 0.7851433157920837, 0.7925450801849365, 0.7940661907196045, 0.7963963747024536, 0.8086876273155212, 0.8151125311851501, 0.5555555820465088}};
    double CJetEff_temp[3][8] = {{0.1866760402917862, 0.15430398285388947, 0.149332195520401, 0.1473056674003601, 0.15486693382263184, 0.1809820979833603, 0.24751688539981842, 0.3410595953464508}, {0.1817660629749298, 0.16032037138938904, 0.152159184217453, 0.15051709115505219, 0.15793780982494354, 0.17588472366333008, 0.24930128455162048, 0.3642857074737549}, {0.18092723190784454, 0.15278801321983337, 0.14476661384105682, 0.14165829122066498, 0.15235109627246857, 0.167973592877388, 0.234375, 0.3333333432674408}};
    double LJetEff_temp[3][8] = {{0.1866760402917862, 0.15430398285388947, 0.149332195520401, 0.1473056674003601, 0.15486693382263184, 0.1809820979833603, 0.24751688539981842, 0.3410595953464508}, {0.1817660629749298, 0.16032037138938904, 0.152159184217453, 0.15051709115505219, 0.15793780982494354, 0.17588472366333008, 0.24930128455162048, 0.3642857074737549}, {0.18092723190784454, 0.15278801321983337, 0.14476661384105682, 0.14165829122066498, 0.15235109627246857, 0.167973592877388, 0.234375, 0.3333333432674408}};
    
    for ( int i=0; i<3 ; i++) {
      for ( int j=0; j<8; j++) {
	LJetEff[i][j] = LJetEff_temp[i][j];
	CJetEff[i][j] = CJetEff_temp[i][j];
	BJetEff[i][j] = BJetEff_temp[i][j];
      }
    }
  }
  if ( MCsample == 21 ) { //2Q2Nu
    double BJetEff_temp[3][8] = {{0.7307692170143127, 0.7727272510528564, 0.8333333134651184, 1.0, 1.0, 1.0, 1.0, 0.0}, {0.75, 0.875, 0.8333333134651184, 0.800000011920929, 0.800000011920929, 1.0, 1.0, 0.0}, {0.800000011920929, 1.0, 0.0, 1.0, 0.5, 0.0, 0.0, 0.0}};
    double CJetEff_temp[3][8] = {{0.0, 0.20000000298023224, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0}, {0.0, 0.0, 0.3333333432674408, 0.3333333432674408, 0.0, 0.0, 0.0, 0.0}, {0.1666666716337204, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0}};
    double LJetEff_temp[3][8] = {{0.0, 0.20000000298023224, 0.0, 0.0, 0.0, 0.5, 0.0, 0.0}, {0.0, 0.0, 0.3333333432674408, 0.3333333432674408, 0.0, 0.0, 0.0, 0.0}, {0.1666666716337204, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0}};
    for ( int i=0; i<3 ; i++) {
      for ( int j=0; j<8; j++) {
	LJetEff[i][j] = LJetEff_temp[i][j];
	CJetEff[i][j] = CJetEff_temp[i][j];
	BJetEff[i][j] = BJetEff_temp[i][j];
      }
    }
  }
  if ( MCsample == 22 ) { //4L
    double BJetEff_temp[3][8] = {{0.804401695728302, 0.8354005217552185, 0.8375062942504883, 0.8517372608184814, 0.847241222858429, 0.8562753200531006, 0.8410404920578003, 0.7599999904632568}, {0.7677525877952576, 0.7957473993301392, 0.812160849571228, 0.805077075958252, 0.8267667293548584, 0.7907324433326721, 0.7867298722267151, 0.9166666865348816}, {0.7447923421859741, 0.7671050429344177, 0.7722746133804321, 0.7902684807777405, 0.7654476761817932, 0.7865168452262878, 0.7971014380455017, 1.0}};
    double CJetEff_temp[3][8] = {{0.1869485229253769, 0.16262733936309814, 0.15511995553970337, 0.15469127893447876, 0.16559851169586182, 0.18809202313423157, 0.21698112785816193, 0.190476194024086}, {0.17908859252929688, 0.16039712727069855, 0.1491926610469818, 0.15208275616168976, 0.15522965788841248, 0.16927260160446167, 0.20208333432674408, 0.260869562625885}, {0.17379318177700043, 0.15197522938251495, 0.14475400745868683, 0.1436408907175064, 0.13850416243076324, 0.1645367443561554, 0.18709677457809448, 0.4000000059604645}};
    double LJetEff_temp[3][8] = {{0.1869485229253769, 0.16262733936309814, 0.15511995553970337, 0.15469127893447876, 0.16559851169586182, 0.18809202313423157, 0.21698112785816193, 0.190476194024086}, {0.17908859252929688, 0.16039712727069855, 0.1491926610469818, 0.15208275616168976, 0.15522965788841248, 0.16927260160446167, 0.20208333432674408, 0.260869562625885}, {0.17379318177700043, 0.15197522938251495, 0.14475400745868683, 0.1436408907175064, 0.13850416243076324, 0.1645367443561554, 0.18709677457809448, 0.4000000059604645}};

    for ( int i=0; i<3 ; i++) {
      for ( int j=0; j<8; j++) {
	LJetEff[i][j] = LJetEff_temp[i][j];
	CJetEff[i][j] = CJetEff_temp[i][j];
	BJetEff[i][j] = BJetEff_temp[i][j];
      }
    }
  }
  if ( MCsample == 23 ) { //2L2Nu
    double BJetEff_temp[3][8] = {{0.8037738800048828, 0.8338888883590698, 0.8310125470161438, 0.8508909940719604, 0.8430953621864319, 0.8525000214576721, 0.8181818127632141, 0.6428571343421936}, {0.7726597189903259, 0.7973986864089966, 0.8155379891395569, 0.8018018007278442, 0.8185603618621826, 0.817480742931366, 0.7674418687820435, 1.0}, {0.7429942488670349, 0.7697626352310181, 0.7682361006736755, 0.7966902852058411, 0.790827751159668, 0.7951070070266724, 0.8160919547080994, 0.6666666865348816}};
    double CJetEff_temp[3][8] = {{0.18107014894485474, 0.16295751929283142, 0.1622505784034729, 0.15144312381744385, 0.1666666716337204, 0.195110023021698, 0.23529411852359772, 0.25}, {0.1768142729997635, 0.16061951220035553, 0.1508255898952484, 0.15197500586509705, 0.1597389280796051, 0.17975938320159912, 0.18151260912418365, 0.2068965584039688}, {0.1664735972881317, 0.14512543380260468, 0.12589073181152344, 0.135994091629982, 0.15363511443138123, 0.16045381128787994, 0.17283950746059418, 0.0}};
    double LJetEff_temp[3][8] = {{0.18107014894485474, 0.16295751929283142, 0.1622505784034729, 0.15144312381744385, 0.1666666716337204, 0.195110023021698, 0.23529411852359772, 0.25}, {0.1768142729997635, 0.16061951220035553, 0.1508255898952484, 0.15197500586509705, 0.1597389280796051, 0.17975938320159912, 0.18151260912418365, 0.2068965584039688}, {0.1664735972881317, 0.14512543380260468, 0.12589073181152344, 0.135994091629982, 0.15363511443138123, 0.16045381128787994, 0.17283950746059418, 0.0}};
    
    for ( int i=0; i<3 ; i++) {
      for ( int j=0; j<8; j++) {
	LJetEff[i][j] = LJetEff_temp[i][j];
	CJetEff[i][j] = CJetEff_temp[i][j];
	BJetEff[i][j] = BJetEff_temp[i][j];
      }
    }
  }
  
  //WZ(30-39)
  if ( MCsample == 30 ) { //2Q2L
    float BJetEff_temp[3][8] = {{0.7374677062034607, 0.7432712316513062, 0.7784430980682373, 0.774946928024292, 0.7397260069847107, 0.7991631627082825, 0.8156028389930725, 0.75}, {0.7127071619033813, 0.7204450368881226, 0.75, 0.7554348111152649, 0.7469387650489807, 0.7697368264198303, 0.7571428418159485, 0.7777777910232544}, {0.6706531643867493, 0.6883364915847778, 0.6600000262260437, 0.6698564887046814, 0.6212121248245239, 0.7200000286102295, 0.7777777910232544, 0.0}};
    float CJetEff_temp[3][8] = {{0.17910674214363098, 0.15684448182582855, 0.1460588574409485, 0.1569010466337204, 0.14976152777671814, 0.18877270817756653, 0.21953780949115753, 0.23529411852359772}, {0.17690809071063995, 0.15502113103866577, 0.1588211953639984, 0.14257313311100006, 0.16116587817668915, 0.16397415101528168, 0.19897958636283875, 0.20408163964748383}, {0.17153193056583405, 0.1518602818250656, 0.1448342502117157, 0.13329848647117615, 0.13931624591350555, 0.17572464048862457, 0.23783783614635468, 0.2222222238779068}};
    float LJetEff_temp[3][8] = {{0.04699958860874176, 0.027718549594283104, 0.022814083844423294, 0.019649721682071686, 0.01693006418645382, 0.019659001380205154, 0.03027554228901863, 0.07725322246551514}, {0.051150549203157425, 0.032301805913448334, 0.025127671658992767, 0.022251656278967857, 0.02090592309832573, 0.024992560967803, 0.03876326605677605, 0.08743169158697128}, {0.05704434588551521, 0.036007314920425415, 0.026364149525761604, 0.02427787333726883, 0.02629082463681698, 0.033130865544080734, 0.04951298609375954, 0.0824742242693901}};
            
    for ( int i=0; i<3 ; i++) {
      for ( int j=0; j<8; j++) {
	LJetEff[i][j] = LJetEff_temp[i][j];
	CJetEff[i][j] = CJetEff_temp[i][j];
	BJetEff[i][j] = BJetEff_temp[i][j];
      }
    }
  }
  if ( MCsample == 31 ) { //3LNu
    double BJetEff_temp[3][8] = {{0.7614991664886475, 0.7464538812637329, 0.7389473915100098, 0.7343283295631409, 0.7098214030265808, 0.762499988079071, 0.8053097128868103, 0.6499999761581421}, {0.7231526970863342, 0.7276595830917358, 0.7543352842330933, 0.7379032373428345, 0.6882352828979492, 0.7226277589797974, 0.7195122241973877, 0.8333333134651184}, {0.6854521632194519, 0.7492163181304932, 0.6736401915550232, 0.78125, 0.6930692791938782, 0.694915235042572, 0.5789473652839661, 1.0}};
    double CJetEff_temp[3][8] = {{0.17624008655548096, 0.1499013751745224, 0.14558514952659607, 0.1371745467185974, 0.13365155458450317, 0.18440860509872437, 0.22109533846378326, 0.2906976640224457}, {0.16912318766117096, 0.15814393758773804, 0.15291479229927063, 0.1468852460384369, 0.15477293729782104, 0.17526617646217346, 0.16880734264850616, 0.3499999940395355}, {0.17823754251003265, 0.15187260508537292, 0.13643178343772888, 0.13392330706119537, 0.1459510326385498, 0.16101695597171783, 0.17045454680919647, 0.2857142984867096}};
    double LJetEff_temp[3][8] = {{0.17624008655548096, 0.1499013751745224, 0.14558514952659607, 0.1371745467185974, 0.13365155458450317, 0.18440860509872437, 0.22109533846378326, 0.2906976640224457}, {0.16912318766117096, 0.15814393758773804, 0.15291479229927063, 0.1468852460384369, 0.15477293729782104, 0.17526617646217346, 0.16880734264850616, 0.3499999940395355}, {0.17823754251003265, 0.15187260508537292, 0.13643178343772888, 0.13392330706119537, 0.1459510326385498, 0.16101695597171783, 0.17045454680919647, 0.2857142984867096}};

    for ( int i=0; i<3 ; i++) {
      for ( int j=0; j<8; j++) {
	LJetEff[i][j] = LJetEff_temp[i][j];
	CJetEff[i][j] = CJetEff_temp[i][j];
	BJetEff[i][j] = BJetEff_temp[i][j];
      }
    }
  }
  if ( MCsample == 32 ) { //1L1Nu2Q
    double BJetEff_temp[3][8] = {{0.6818181872367859, 0.7777777910232544, 0.8571428656578064, 0.6666666865348816, 0.75, 0.5, 0.0, 0.0}, {0.5714285969734192, 0.5714285969734192, 1.0, 0.0, 0.6666666865348816, 1.0, 0.0, 0.0}, {0.4000000059604645, 0.75, 1.0, 1.0, 0.5, 1.0, 0.0, 0.0}};
    double CJetEff_temp[3][8] = {{0.178660050034523, 0.12380952388048172, 0.1342281848192215, 0.15662650763988495, 0.125, 0.17391304671764374, 0.4375, 0.0}, {0.2133333384990692, 0.19411765038967133, 0.15714286267757416, 0.1230769231915474, 0.13636364042758942, 0.31578946113586426, 0.25, 0.0}, {0.15789473056793213, 0.1147540956735611, 0.14102564752101898, 0.15000000596046448, 0.2083333283662796, 0.25, 0.0, 0.0}};
    double LJetEff_temp[3][8] = {{0.178660050034523, 0.12380952388048172, 0.1342281848192215, 0.15662650763988495, 0.125, 0.17391304671764374, 0.4375, 0.0}, {0.2133333384990692, 0.19411765038967133, 0.15714286267757416, 0.1230769231915474, 0.13636364042758942, 0.31578946113586426, 0.25, 0.0}, {0.15789473056793213, 0.1147540956735611, 0.14102564752101898, 0.15000000596046448, 0.2083333283662796, 0.25, 0.0, 0.0}};
            
    for ( int i=0; i<3 ; i++) {
      for ( int j=0; j<8; j++) {
	LJetEff[i][j] = LJetEff_temp[i][j];
	CJetEff[i][j] = CJetEff_temp[i][j];
	BJetEff[i][j] = BJetEff_temp[i][j];
      }
    }
  }
  
  //TTBar(60-69)
  if ( MCsample == 60 ) { //SemiLeptonic
    double BJetEff_temp[3][8] = {{0.8218224048614502, 0.8450732231140137, 0.8570916652679443, 0.8631432056427002, 0.8661755919456482, 0.8609552383422852, 0.8396305441856384, 0.8202898502349854}, {0.7825815081596375, 0.8076651692390442, 0.8214542269706726, 0.8285794854164124, 0.8353093862533569, 0.8305027484893799, 0.7970120310783386, 0.7537993788719177}, {0.750660240650177, 0.777766227722168, 0.784792423248291, 0.7929067015647888, 0.7978859543800354, 0.7915332913398743, 0.7435736656188965, 0.6122449040412903}};
    double CJetEff_temp[3][8] = {{0.18991687893867493, 0.16162647306919098, 0.15085291862487793, 0.15033236145973206, 0.15714889764785767, 0.18896439671516418, 0.2336091697216034, 0.28227195143699646}, {0.1852143108844757, 0.16021768748760223, 0.15171369910240173, 0.15353818237781525, 0.1636633425951004, 0.18148599565029144, 0.2216353714466095, 0.287066251039505}, {0.18179060518741608, 0.15310204029083252, 0.14063183963298798, 0.14136731624603271, 0.15505483746528625, 0.18373794853687286, 0.19155843555927277, 0.1568627506494522}};
    double LJetEff_temp[3][8] = {{0.18991687893867493, 0.16162647306919098, 0.15085291862487793, 0.15033236145973206, 0.15714889764785767, 0.18896439671516418, 0.2336091697216034, 0.28227195143699646}, {0.1852143108844757, 0.16021768748760223, 0.15171369910240173, 0.15353818237781525, 0.1636633425951004, 0.18148599565029144, 0.2216353714466095, 0.287066251039505}, {0.18179060518741608, 0.15310204029083252, 0.14063183963298798, 0.14136731624603271, 0.15505483746528625, 0.18373794853687286, 0.19155843555927277, 0.1568627506494522}};
 
    for ( int i=0; i<3 ; i++) {
      for ( int j=0; j<8; j++) {
	LJetEff[i][j] = LJetEff_temp[i][j];
	CJetEff[i][j] = CJetEff_temp[i][j];
	BJetEff[i][j] = BJetEff_temp[i][j];
      }
    }
  }
  if ( MCsample == 61 ) { //DiLeptonic
    double BJetEff_temp[3][8] = {{0.8231846690177917, 0.8478888273239136, 0.8609367609024048, 0.8684208393096924, 0.8716374635696411, 0.8704427480697632, 0.8543524742126465, 0.7668393850326538}, {0.7838457822799683, 0.811503529548645, 0.8265758752822876, 0.8358264565467834, 0.8396584391593933, 0.8321884274482727, 0.8085358142852783, 0.7515657544136047}, {0.7555772662162781, 0.7806532979011536, 0.7932387590408325, 0.8035593628883362, 0.8085532784461975, 0.8021367788314819, 0.7596641778945923, 0.5473684072494507}};
    double CJetEff_temp[3][8] = {{0.1862255483865738, 0.172629714012146, 0.17460991442203522, 0.1799161285161972, 0.18894940614700317, 0.206743061542511, 0.2380104959011078, 0.25522252917289734}, {0.17207662761211395, 0.15782220661640167, 0.15884840488433838, 0.1596355140209198, 0.1702539622783661, 0.18548786640167236, 0.214784637093544, 0.23888182640075684}, {0.16494835913181305, 0.147904172539711, 0.1438611000776291, 0.14404630661010742, 0.15060345828533173, 0.169078528881073, 0.18883174657821655, 0.19631901383399963}};
    double LJetEff_temp[3][8] = {{0.1862255483865738, 0.172629714012146, 0.17460991442203522, 0.1799161285161972, 0.18894940614700317, 0.206743061542511, 0.2380104959011078, 0.25522252917289734}, {0.17207662761211395, 0.15782220661640167, 0.15884840488433838, 0.1596355140209198, 0.1702539622783661, 0.18548786640167236, 0.214784637093544, 0.23888182640075684}, {0.16494835913181305, 0.147904172539711, 0.1438611000776291, 0.14404630661010742, 0.15060345828533173, 0.169078528881073, 0.18883174657821655, 0.19631901383399963}};
            
    for ( int i=0; i<3 ; i++) {
      for ( int j=0; j<8; j++) {
	LJetEff[i][j] = LJetEff_temp[i][j];
	CJetEff[i][j] = CJetEff_temp[i][j];
	BJetEff[i][j] = BJetEff_temp[i][j];
      }
    }
  }

  
  for (int i = 0; i < (int)Jet.size(); i++){
    float jet_prob_mc = 1.0;
    float jet_prob_data = 1.0;
    float jet_eff = 1.0;
    // choose pt bin
    int ptbin=-1;
    if     ( Jet.at(i).v.Pt() < 50  )  ptbin=0;
    else if( Jet.at(i).v.Pt() < 70  )  ptbin=1;
    else if( Jet.at(i).v.Pt() < 100 )  ptbin=2;
    else if( Jet.at(i).v.Pt() < 140 )  ptbin=3;
    else if( Jet.at(i).v.Pt() < 200 )  ptbin=4;
    else if( Jet.at(i).v.Pt() < 300 )  ptbin=5;
    else if( Jet.at(i).v.Pt() < 600 )  ptbin=6;
    else                               ptbin=7;
    // choose eta bin
    int etabin=-1;
    if      ( fabs(Jet.at(i).v.Eta()) < 0.8 ) etabin=0;
    else if ( fabs(Jet.at(i).v.Eta()) < 1.6 ) etabin=1;
    else if ( fabs(Jet.at(i).v.Eta()) < 2.4 ) etabin=2;
    else                                 continue;
    // choose flavor  
    if      ( Jet.at(i).hadronflavor == 5 ) jet_eff = BJetEff[etabin][ptbin];
    else if ( Jet.at(i).hadronflavor == 4 ) jet_eff = CJetEff[etabin][ptbin];
    else                                    jet_eff = LJetEff[etabin][ptbin];

    double SFfromPOG =  1.0;
    if( Jet.at(i).hadronflavor == 5 )
      SFfromPOG = getScaleFactors_bTagJets_MedWP_UL18(Jet.at(i).v.Eta(),Jet.at(i).v.Pt());
    else if(Jet.at(i).hadronflavor == 4 )
      SFfromPOG = getScaleFactors_cTagJets_Mis_UL18(Jet.at(i).v.Eta(),Jet.at(i).v.Pt());
    else
      SFfromPOG = getScaleFactors_LightTagJets_Mis_UL18(Jet.at(i).v.Eta(),Jet.at(i).v.Pt());
    
    // check if jet is tagged or not
    if (Jet_btagDeepFlavB[Jet.at(i).ind] > 0.2783){
      jet_prob_data = jet_eff*SFfromPOG;
      jet_prob_mc   = jet_eff;
    }
    else {    
      jet_prob_data = 1-(jet_eff*SFfromPOG);
      jet_prob_mc   = 1-jet_eff;
    }
    
    probability_data *= jet_prob_data;
    probability_mc   *= jet_prob_mc;
  }
  
  float scaleFactor = 1.0;
  if (probability_mc > 0.0) scaleFactor = probability_data/probability_mc;
  
  return scaleFactor;
}

